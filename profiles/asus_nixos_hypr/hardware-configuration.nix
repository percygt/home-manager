# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: let
  nixosDisc = "/dev/disk/by-label/NIXOS";
  uefiDisc = "/dev/disk/by-label/UEFI";
in {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd.availableKernelModules = ["xhci_pci" "vmd" "ahci" "nvme" "usb_storage" "usbhid" "uas" "sd_mod" "rtsx_usb_sdmmc" "thunderbolt"];
    initrd.kernelModules = [];
    kernelModules = ["kvm-intel"];
    extraModulePackages = [];
  };
  fileSystems = {
    "/" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=root"];
    };
    "/home" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=home"];
    };
    "/nix" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=nix"];
    };
    "/opt" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=opt"];
    };

    "/var/www" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=var/www"];
    };

    "/var/spool" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=var/spool"];
    };

    "/var/tmp" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=var/tmp"];
    };

    "/var/log" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=var/log"];
    };

    "/var/crash" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=var/crash"];
    };

    "/var/cache" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=var/cache"];
    };
    "/var/lib/gdm" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=var/lib/gdm"];
    };
    "/var/lib/AccountsService" = {
      device = nixosDisc;
      fsType = "btrfs";
      options = ["subvol=var/lib/AccountsService"];
    };
    "/boot/efi" = {
      device = uefiDisc;
      fsType = "vfat";
      options = ["umask=0077" "shortname=winnt"];
    };
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
